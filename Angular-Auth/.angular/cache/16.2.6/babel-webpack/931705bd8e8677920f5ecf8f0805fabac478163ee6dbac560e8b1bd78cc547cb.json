{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AuthService {\n  constructor(router) {\n    this.router = router;\n    this.users = [{\n      id: 1,\n      name: 'Rodrigo',\n      username: 'rodrigo',\n      password: 'rod@123'\n    }, {\n      id: 2,\n      name: 'Raj',\n      username: 'raj',\n      password: 'raj@123'\n    }];\n  }\n  login(username, password) {\n    let user = this.users.find(u => u.username === username && u.password === password);\n    if (user) {\n      this.session = user;\n      localStorage.setItem('session', JSON.stringify(this.session));\n    }\n    return user;\n  }\n  logout() {\n    this.session = undefined;\n    localStorage.removeItem('session');\n    this.router.navigateByUrl('/');\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthService","constructor","router","users","id","name","username","password","login","user","find","u","session","localStorage","setItem","JSON","stringify","logout","undefined","removeItem","navigateByUrl","_","i0","ɵɵinject","i1","Router","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\HP\\Desktop\\Angular\\Angular-Auth\\src\\app\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  users: any[] = [\n    {\n      id: 1,\n      name: 'Rodrigo',\n      username: 'rodrigo',\n      password: 'rod@123',\n    },\n    {\n      id: 2,\n      name: 'Raj',\n      username: 'raj',\n      password: 'raj@123',\n    }\n  ]\nsession: any;\n  constructor(private router: Router) { }\n  login(username: string, password: string,){\n    let user = this.users.find((u) => u.username===username && u.password===password);\n      if(user){\n            this.session = user;\n            localStorage.setItem('session', JSON.stringify(this.session));\n      }\n      return user;\n  }\n  logout(){\n    this.session = undefined;\n    localStorage.removeItem('session');\n    this.router.navigateByUrl('/');\n\n\n  }\n}\n"],"mappings":";;AAMA,OAAM,MAAOA,WAAW;EAiBtBC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;IAf1B,KAAAC,KAAK,GAAU,CACb;MACEC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,SAAS;MACfC,QAAQ,EAAE,SAAS;MACnBC,QAAQ,EAAE;KACX,EACD;MACEH,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,KAAK;MACXC,QAAQ,EAAE,KAAK;MACfC,QAAQ,EAAE;KACX,CACF;EAEqC;EACtCC,KAAKA,CAACF,QAAgB,EAAEC,QAAgB;IACtC,IAAIE,IAAI,GAAG,IAAI,CAACN,KAAK,CAACO,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACL,QAAQ,KAAGA,QAAQ,IAAIK,CAAC,CAACJ,QAAQ,KAAGA,QAAQ,CAAC;IAC/E,IAAGE,IAAI,EAAC;MACF,IAAI,CAACG,OAAO,GAAGH,IAAI;MACnBI,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACJ,OAAO,CAAC,CAAC;;IAEnE,OAAOH,IAAI;EACf;EACAQ,MAAMA,CAAA;IACJ,IAAI,CAACL,OAAO,GAAGM,SAAS;IACxBL,YAAY,CAACM,UAAU,CAAC,SAAS,CAAC;IAClC,IAAI,CAACjB,MAAM,CAACkB,aAAa,CAAC,GAAG,CAAC;EAGhC;EAAC,QAAAC,CAAA,G;qBAhCUrB,WAAW,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAX1B,WAAW;IAAA2B,OAAA,EAAX3B,WAAW,CAAA4B,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}